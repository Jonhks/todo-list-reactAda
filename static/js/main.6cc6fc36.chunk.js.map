{"version":3,"sources":["firebase-config.js","components/Form.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Form","setTodos","todos","inputText","setInputText","setStatus","status","classes","makeStyles","theme","root","flexGrow","input","backgroundColor","formControl","margin","spacing","minWidth","width","selectEmpty","marginTop","button","useStyles","guardarEnFirebase","tarea","collection","add","then","docRef","console","log","id","catch","error","className","Grid","container","direction","justify","alignItems","item","sm","xs","autoComplete","TextField","label","value","onChange","e","target","placeholder","fullWidth","style","InputLabelProps","shrink","variant","Button","disabled","trim","length","onClick","preventDefault","text","completed","Math","random","color","endIcon","Icon","FormControl","InputLabel","Select","labelId","event","MenuItem","Todo","todo","editarCompleted","doc","set","delete","TodoList","filteredTodos","map","App","useState","setFilteredTodos","useEffect","get","querySnapshot","docs","forEach","push","data","filter","filteredHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cc6fc36.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAwiol55GSsJ2Ix6hibVlEtnEJjNz_5HFQ\",\n  authDomain: \"todo-list-ada-4a58e.firebaseapp.com\",\n  projectId: \"todo-list-ada-4a58e\",\n  storageBucket: \"todo-list-ada-4a58e.appspot.com\",\n  messagingSenderId: \"415029745850\",\n  appId: \"1:415029745850:web:1f23210ef1ecaeb7c70a83\"\n};\n\n// Initialize Firebase\nconst fb =  firebase.initializeApp(firebaseConfig);\nexport const db = fb.firestore();\n","import {db} from '../firebase-config';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {\n  FormControl,\n  Grid,\n  TextField,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Icon\n} from '@material-ui/core';\n\nconst Form = ({setTodos, todos, inputText, setInputText, setStatus, status}) => {\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1\n    },\n    input: {\n      backgroundColor: 'white'\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      width: '94%',\n      backgroundColor: 'white'\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(1),\n      width:'95%'\n    }\n  }));\n\n  const classes = useStyles();\n\nconst submitTodoHandler = e => {\n    e.preventDefault();\n    setTodos([...todos, {\n      text: inputText,\n      completed: false,\n      id: Math.random() * 10000\n    }])\n    guardarEnFirebase({\n      text: inputText,\n      completed: false,\n      id: Math.random() * 10000\n    })\n    setInputText('')\n  }\n\n  const inputTextHandler = e => {\n    setInputText(e.target.value);\n  }\n\n  const statusHandler = event => {\n    setStatus(event.target.value);\n  }\n\n  const guardarEnFirebase = tarea => {\n    // Add a new document with a generated id.\n    db.collection(\"todos\").add(tarea)\n    .then((docRef) => {\n      console.log(\"Document written with ID: \", docRef.id);\n    })\n    .catch((error) => {\n      console.error(\"Error adding document: \", error);\n    });\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        spacing={0}\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\">\n        <Grid item sm={4} xs={12}>\n          <div className={classes.root}  autoComplete=\"off\">\n            <TextField\n              className={classes.input}\n              id=\"illed-full-width\"\n              label=\"Tarea\"\n              value={inputText}\n              onChange={inputTextHandler}\n              placeholder=\"Ingresa una tarea\"\n              fullWidth\n              margin=\"normal\"\n              style={{\n              margin: 8\n            }}\n              InputLabelProps={{\n              shrink: true\n            }}\n              variant=\"filled\"\n            />\n          </div>\n        </Grid>\n        <Grid item sm={1} xs={12}>\n          <Button\n            disabled={inputText.trim().length === 0}\n            onClick={submitTodoHandler}\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            endIcon={<Icon>send</Icon>}\n            >\n            Send\n          </Button>\n        </Grid>\n        <Grid item sm={4} xs={12}>\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Seleccionar</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              onChange={statusHandler}\n              value={status}\n            >\n              <MenuItem value=\"all\">Todas</MenuItem>\n              <MenuItem value=\"completed\">Completas</MenuItem>\n              <MenuItem value=\"uncompleted\">Incompletas</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n\n      </Grid>\n    </div>\n  );\n};\n\nexport default Form;","import {db} from '../firebase-config';\n\nconst Todo = ({todo}) => {\n\n  const deleteHandler = () => {\n    db.collection(\"todos\").doc(todo.id).delete().then(() => {\n      console.log(\"Document successfully deleted!\");\n    }).catch((error) => {\n        console.error(\"Error removing document: \", error);\n    });\n  }\n\n  const completeHandler = () => {\n    editarCompleted(todo)\n  }\n\n  const editarCompleted = tarea => {\n    // Add a new document in collection \"cities\"\n    db.collection(\"todos\").doc(tarea.id).set({\n      ...tarea, completed: !tarea.completed\n    })\n    .then(() => {\n      console.log(\"Document successfully written!\");\n    })\n    .catch((error) => {\n      console.error(\"Error writing document: \", error);\n    });\n  }\n\n\n  return (\n    <div className=\"todo\">\n      <li className={`todo-item ${todo.completed && \"completed\"}`}>{todo.text}</li> \n      <button onClick={completeHandler} className={`complete-btn ${todo.completed && \"boton-rojo\"}  `}>\n        <i className=\"fas fa-check\"></i>\n      </button>\n      <button onClick={deleteHandler} className=\"trash-btn\">\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </div>\n  );\n}\n\nexport default Todo;","import Todo from './Todo';\n\nconst TodoList = ({filteredTodos}) => {\n  return (\n    <div>\n      <div className=\"todo-container\">\n        <ul className=\"todo-list\">\n          {filteredTodos.map(todo => (\n            <Todo\n              todo={todo}\n              key={todo.id}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoList;\n\n\n","import {useState, useEffect} from 'react';\nimport {db} from './firebase-config';\nimport './App.css';\n\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  const traerDesdeFirebase = () => {\n    db.collection(\"todos\").get().then((querySnapshot) => {\n      const docs = [];\n      querySnapshot.forEach((doc) => {\n          docs.push({...doc.data(), id: doc.id})\n        });\n        setTodos(docs)\n    });\n  }\n\n  useEffect(() => {\n  traerDesdeFirebase();\n  },[todos])\n\n  useEffect(() => {\n    const filteredHandler = () => {\n      switch(status) {\n        case 'completed' :\n          setFilteredTodos(todos.filter(tarea => tarea.completed === true))\n        break;\n        case 'uncompleted' :\n          setFilteredTodos(todos.filter(tarea => tarea.completed === false))\n        break;\n        default:\n          setFilteredTodos(todos);\n      }\n    }\n  \n    filteredHandler();\n  },[todos, status])\n\n\n  return (\n    <div>\n      <header>\n        <h1>Todo List</h1>\n      </header>\n      <Form\n        todos={todos}\n        setTodos={setTodos}\n        inputText={inputText}\n        setInputText={setInputText}\n        setStatus={setStatus}\n        status={status}\n      />\n      <TodoList \n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './firebase-config';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}